[{"path":"https://spatlyu.github.io/sdsfun/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer.","code":""},{"path":"https://spatlyu.github.io/sdsfun/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2024). sdsfun: Functions Spatial Data Science. R package version 0.0.0.9000, https://github.com/SpatLyu/sdsfun, https://spatlyu.github.io/sdsfun.","code":"@Manual{,   title = {sdsfun: Functions for Spatial Data Science},   author = {Wenbo Lv},   year = {2024},   note = {R package version 0.0.0.9000, https://github.com/SpatLyu/sdsfun},   url = {https://spatlyu.github.io/sdsfun}, }"},{"path":"https://spatlyu.github.io/sdsfun/index.html","id":"sdsfun-","dir":"","previous_headings":"","what":"sdsfun | Functions for Spatial Data Science\n","title":"sdsfun | Functions for Spatial Data Science\n","text":"goal sdsfun provide miscellaneous functions summarize common operations R packages (sf terra packages) related spatial data science.","code":""},{"path":[]},{"path":"https://spatlyu.github.io/sdsfun/index.html","id":"install-from-source","dir":"","previous_headings":"Installation","what":"Install from source","title":"sdsfun | Functions for Spatial Data Science\n","text":"can install development version sdsfun GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"SpatLyu/sdsfun\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://spatlyu.github.io/sdsfun/index.html","id":"install-the-binary-version","dir":"","previous_headings":"Installation","what":"Install the binary version","title":"sdsfun | Functions for Spatial Data Science\n","text":"can also install binary version sdsfun r-universe:","code":"install.packages(\"sdsfun\",                   repos = c(\"https://spatlyu.r-universe.dev\",                            \"https://cran.rstudio.com/\"),                  dep = TRUE)"},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":null,"dir":"Reference","previous_headings":"","what":"construct inverse distance weight — inverse_distance_swm","title":"construct inverse distance weight — inverse_distance_swm","text":"Function construct inverse distance weight.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct inverse distance weight — inverse_distance_swm","text":"","code":"inverse_distance_swm(sfj, power = 1)"},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct inverse distance weight — inverse_distance_swm","text":"sfj Vector object can converted sf sf::st_as_sf(). power (optional) Default 1. Set 2 gravity weights.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"construct inverse distance weight — inverse_distance_swm","text":"inverse distance weight matrices class matrix.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"construct inverse distance weight — inverse_distance_swm","text":"inverse distance weight formula \\(w_{ij} = 1 / d_{ij}^\\alpha\\)","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/inverse_distance_swm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct inverse distance weight — inverse_distance_swm","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun')) wt = inverse_distance_swm(pts) wt[1:5,1:5] #>            1          2          3          4          5 #> 1 0.00000000 0.14752234 0.31973180 0.12091275 0.11808968 #> 2 0.11675993 0.00000000 0.14644450 0.09462897 0.05873575 #> 3 0.33226354 0.19227990 0.00000000 0.13425159 0.11822598 #> 4 0.07668979 0.07583218 0.08193851 0.00000000 0.10273115 #> 5 0.15805092 0.09932340 0.15226537 0.21678127 0.00000000"},{"path":"https://spatlyu.github.io/sdsfun/reference/normalize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"normalization — normalize_vector","title":"normalization — normalize_vector","text":"normalization","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/normalize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"normalization — normalize_vector","text":"","code":"normalize_vector(x, to_left = 0, to_right = 1)"},{"path":"https://spatlyu.github.io/sdsfun/reference/normalize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"normalization — normalize_vector","text":"x continuous numeric vector. to_left (optional) Specified minimum. Default 0. to_right (optional) Specified maximum. Default 1.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/normalize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"normalization — normalize_vector","text":"continuous vector normalized.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/normalize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"normalization — normalize_vector","text":"","code":"normalize_vector(c(-5,1,5,0.01,0.99)) #> [1] 0.000 0.600 1.000 0.501 0.599"},{"path":"https://spatlyu.github.io/sdsfun/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_name.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object geometry column name — sf_geometry_name","title":"sf object geometry column name — sf_geometry_name","text":"Get geometry column name sf object","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object geometry column name — sf_geometry_name","text":"","code":"sf_geometry_name(sfj)"},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sf object geometry column name — sf_geometry_name","text":"sfj sf object.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sf object geometry column name — sf_geometry_name","text":"character.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sf object geometry column name — sf_geometry_name","text":"","code":"library(sf) snnu = read_sf(system.file('extdata/snnu.geojson',package = 'sdsfun')) sf_geometry_name(snnu) #> [1] \"geometry\""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_type.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object geometry type — sf_geometry_type","title":"sf object geometry type — sf_geometry_type","text":"Get geometry type sf object","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object geometry type — sf_geometry_type","text":"","code":"sf_geometry_type(sfj)"},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sf object geometry type — sf_geometry_type","text":"sfj sf object.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sf object geometry type — sf_geometry_type","text":"lowercase character vector","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_geometry_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sf object geometry type — sf_geometry_type","text":"","code":"library(sf) snnu = read_sf(system.file('extdata/snnu.geojson',package = 'sdsfun')) sf_geometry_type(snnu) #> [1] \"polygon\""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"generates voronoi diagram — sf_voronoi_diagram","title":"generates voronoi diagram — sf_voronoi_diagram","text":"Generates Voronoi diagram (Thiessen polygons) sf object","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates voronoi diagram — sf_voronoi_diagram","text":"","code":"sf_voronoi_diagram(sfj)"},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sfj sf object.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sf object polygon geometry type.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sf objects (multi-)point type supported generate voronoi diagram returned result includes geometry column.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates voronoi diagram — sf_voronoi_diagram","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun')) pts_v = sf_voronoi_diagram(pts)  library(ggplot2) ggplot() +   geom_sf(data = pts_v, color = 'red',           fill = 'transparent') +   geom_sf(data = pts, color = 'blue', size = 1.25) +   theme_void()"},{"path":"https://spatlyu.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":null,"dir":"Reference","previous_headings":"","what":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"Constructs spatial weight matrices based contiguity via spdep package.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"","code":"spdep_contiguity_swm(   sfj,   queen = TRUE,   k = NULL,   order = 1L,   cumulate = TRUE,   style = \"W\",   zero.policy = TRUE )"},{"path":"https://spatlyu.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"sfj sf object. queen (optional) TRUE, using queen contiguity, otherwise rook contiguity. Default TRUE. k (optional) number nearest neighbours. Ignore parameter using distance based neighbours construct spatial weight matrices. order (optional) order adjacency object. Default 1. cumulate (optional) Whether accumulate adjacency objects. Default TRUE. style (optional) style can take values W, B, C, S. see spdep::nb2mat(). Default W. zero.policy (optional)  FALSE stop error empty neighbour sets, TRUE permit weights list formed zero-length weights vectors. Default TRUE.","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"matrix","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun'))  wt1 = spdep_contiguity_swm(pts, k = 6, style = 'B') wt2 = spdep_contiguity_swm(pts, queen = TRUE, style = 'B') wt2 = spdep_contiguity_swm(pts, queen = FALSE, order = 2, style = 'B')"},{"path":"https://spatlyu.github.io/sdsfun/reference/standardize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"standardization — standardize_vector","title":"standardization — standardize_vector","text":"calculate Z-score using variance normalization, formula follows: \\(Z = \\frac{(x - mean(x))}{sd(x)}\\)","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/standardize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standardization — standardize_vector","text":"","code":"standardize_vector(x)"},{"path":"https://spatlyu.github.io/sdsfun/reference/standardize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standardization — standardize_vector","text":"x numeric vector","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/standardize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"standardization — standardize_vector","text":"standardized numeric vector","code":""},{"path":"https://spatlyu.github.io/sdsfun/reference/standardize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"standardization — standardize_vector","text":"","code":"standardize_vector(1:10) #>  [1] -1.4863011 -1.1560120 -0.8257228 -0.4954337 -0.1651446  0.1651446 #>  [7]  0.4954337  0.8257228  1.1560120  1.4863011"}]
