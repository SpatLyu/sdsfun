[{"path":"https://stscl.github.io/sdsfun/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder.","code":""},{"path":"https://stscl.github.io/sdsfun/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2024). sdsfun: Spatial Data Science Complementary Features. R package version 0.3.0, https://github.com/stscl/sdsfun, https://stscl.github.io/sdsfun/.","code":"@Manual{,   title = {sdsfun: Spatial Data Science Complementary Features},   author = {Wenbo Lv},   year = {2024},   note = {R package version 0.3.0, https://github.com/stscl/sdsfun},   url = {https://stscl.github.io/sdsfun/}, }"},{"path":"https://stscl.github.io/sdsfun/index.html","id":"sdsfun-","dir":"","previous_headings":"","what":"sdsfun | Functions for Spatial Data Science\n","title":"sdsfun | Functions for Spatial Data Science\n","text":"Spatial Data Science Complementary Features","code":""},{"path":"https://stscl.github.io/sdsfun/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"sdsfun | Functions for Spatial Data Science\n","text":"Install CRAN : Install development binary version R-universe : Install development source version GitHub :","code":"install.packages(\"sdsfun\") install.packages('sdsfun',                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) # install.packages(\"devtools\") devtools::install_github(\"stscl/sdsfun\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://stscl.github.io/sdsfun/reference/dummy_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","title":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","text":"transforming category tibble corresponding dummy variable tibble","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","text":"","code":"dummy_tbl(tbl)"},{"path":"https://stscl.github.io/sdsfun/reference/dummy_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","text":"tbl tibble data.frame.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","text":"tibble","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"transforming a category tibble into the corresponding dummy variable tibble — dummy_tbl","text":"","code":"a = tibble::tibble(x = 1:3,y = 4:6) dummy_tbl(a) #> # A tibble: 3 × 6 #>     x_1   x_2   x_3   y_4   y_5   y_6 #>   <int> <int> <int> <int> <int> <int> #> 1     1     0     0     1     0     0 #> 2     0     1     0     0     1     0 #> 3     0     0     1     0     0     1"},{"path":"https://stscl.github.io/sdsfun/reference/dummy_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"transforming a categorical variable into dummy variables — dummy_vector","title":"transforming a categorical variable into dummy variables — dummy_vector","text":"transforming categorical variable dummy variables","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transforming a categorical variable into dummy variables — dummy_vector","text":"","code":"dummy_vector(x)"},{"path":"https://stscl.github.io/sdsfun/reference/dummy_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"transforming a categorical variable into dummy variables — dummy_vector","text":"x integer vector can converted integer vector.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"transforming a categorical variable into dummy variables — dummy_vector","text":"matrix.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/dummy_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"transforming a categorical variable into dummy variables — dummy_vector","text":"","code":"dummy_vector(c(1,1,3,2,4,6)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #> [3,]    0    1    0    0    0 #> [4,]    0    0    1    0    0 #> [5,]    0    0    0    1    0 #> [6,]    0    0    0    0    1"},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":null,"dir":"Reference","previous_headings":"","what":"construct inverse distance weight — inverse_distance_swm","title":"construct inverse distance weight — inverse_distance_swm","text":"Function constructing inverse distance weight.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct inverse distance weight — inverse_distance_swm","text":"","code":"inverse_distance_swm(sfj, power = 1, bandwidth = NULL)"},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct inverse distance weight — inverse_distance_swm","text":"sfj Vector object can converted sf sf::st_as_sf(). power (optional) Default 1. Set 2 gravity weights. bandwidth (optional) distance bigger bandwidth, corresponding part weight matrix set 0. Default NULL, means use bandwidth.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"construct inverse distance weight — inverse_distance_swm","text":"inverse distance weight matrices class matrix.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"construct inverse distance weight — inverse_distance_swm","text":"inverse distance weight formula \\(w_{ij} = 1 / d_{ij}^\\alpha\\)","code":""},{"path":"https://stscl.github.io/sdsfun/reference/inverse_distance_swm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct inverse distance weight — inverse_distance_swm","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun')) wt = inverse_distance_swm(pts) wt[1:5,1:5] #>              1            2            3            4            5 #> 1 0.000000e+00 5.813118e-05 1.654238e-04 3.818149e-05 7.868869e-05 #> 2 5.813118e-05 0.000000e+00 7.576789e-05 2.988167e-05 3.913838e-05 #> 3 1.654238e-04 7.576789e-05 0.000000e+00 4.239359e-05 7.877952e-05 #> 4 3.818149e-05 2.988167e-05 4.239359e-05 0.000000e+00 6.845458e-05 #> 5 7.868869e-05 3.913838e-05 7.877952e-05 6.845458e-05 0.000000e+00"},{"path":"https://stscl.github.io/sdsfun/reference/normalize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"normalization — normalize_vector","title":"normalization — normalize_vector","text":"normalization","code":""},{"path":"https://stscl.github.io/sdsfun/reference/normalize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"normalization — normalize_vector","text":"","code":"normalize_vector(x, to_left = 0, to_right = 1)"},{"path":"https://stscl.github.io/sdsfun/reference/normalize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"normalization — normalize_vector","text":"x continuous numeric vector. to_left (optional) Specified minimum. Default 0. to_right (optional) Specified maximum. Default 1.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/normalize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"normalization — normalize_vector","text":"continuous vector normalized.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/normalize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"normalization — normalize_vector","text":"","code":"normalize_vector(c(-5,1,5,0.01,0.99)) #> [1] 0.000 0.600 1.000 0.501 0.599"},{"path":"https://stscl.github.io/sdsfun/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://stscl.github.io/sdsfun/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"NULL (magrittr pipe operator)","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_distance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generates distance matrix — sf_distance_matrix","title":"generates distance matrix — sf_distance_matrix","text":"Generates distance matrix sf object","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_distance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates distance matrix — sf_distance_matrix","text":"","code":"sf_distance_matrix(sfj)"},{"path":"https://stscl.github.io/sdsfun/reference/sf_distance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates distance matrix — sf_distance_matrix","text":"sfj sf object can converted sf sf::st_as_sf().","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_distance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates distance matrix — sf_distance_matrix","text":"matrix.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_distance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates distance matrix — sf_distance_matrix","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun')) pts_distm = sf_distance_matrix(pts) pts_distm[1:5,1:5] #>           1        2         3        4        5 #> 1     0.000 17202.47  6045.079 26190.70 12708.31 #> 2 17202.473     0.00 13198.202 33465.33 25550.36 #> 3  6045.079 13198.20     0.000 23588.47 12693.66 #> 4 26190.701 33465.33 23588.471     0.00 14608.23 #> 5 12708.306 25550.36 12693.655 14608.23     0.00"},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_name.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object geometry column name — sf_geometry_name","title":"sf object geometry column name — sf_geometry_name","text":"Get geometry column name sf object","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object geometry column name — sf_geometry_name","text":"","code":"sf_geometry_name(sfj)"},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sf object geometry column name — sf_geometry_name","text":"sfj sf object.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sf object geometry column name — sf_geometry_name","text":"character.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sf object geometry column name — sf_geometry_name","text":"","code":"library(sf) gzma = read_sf(system.file('extdata/gzma.gpkg',package = 'sdsfun')) sf_geometry_name(gzma) #> [1] \"geom\""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_type.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object geometry type — sf_geometry_type","title":"sf object geometry type — sf_geometry_type","text":"Get geometry type sf object","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object geometry type — sf_geometry_type","text":"","code":"sf_geometry_type(sfj)"},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sf object geometry type — sf_geometry_type","text":"sfj sf object.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sf object geometry type — sf_geometry_type","text":"lowercase character vector","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_geometry_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sf object geometry type — sf_geometry_type","text":"","code":"library(sf) gzma = read_sf(system.file('extdata/gzma.gpkg',package = 'sdsfun')) sf_geometry_type(gzma) #> [1] \"polygon\""},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":null,"dir":"Reference","previous_headings":"","what":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"Generates utm projection epsg coding character corresponding sfj object WGS84 spatial reference.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"","code":"sf_utm_proj_wgs84(sfj)"},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"sfj sf object can converted sf sf::st_as_sf().","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"character.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"details, please refer https://zhuanlan.zhihu.com/p/670055831.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_utm_proj_wgs84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates wgs84 utm projection epsg coding character — sf_utm_proj_wgs84","text":"","code":"library(sf) gzma = read_sf(system.file('extdata/gzma.gpkg',package = 'sdsfun')) sf_utm_proj_wgs84(gzma) #> [1] \"EPSG:32649\""},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"generates voronoi diagram — sf_voronoi_diagram","title":"generates voronoi diagram — sf_voronoi_diagram","text":"Generates Voronoi diagram (Thiessen polygons) sf object","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates voronoi diagram — sf_voronoi_diagram","text":"","code":"sf_voronoi_diagram(sfj)"},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sfj sf object.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sf object polygon geometry type can converted sf::st_as_sf().","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"generates voronoi diagram — sf_voronoi_diagram","text":"sf objects (multi-)point type supported generate voronoi diagram returned result includes geometry column.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/sf_voronoi_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates voronoi diagram — sf_voronoi_diagram","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun')) pts_v = sf_voronoi_diagram(pts)  library(ggplot2) ggplot() +   geom_sf(data = pts_v, color = 'red',           fill = 'transparent') +   geom_sf(data = pts, color = 'blue', size = 1.25) +   theme_void()"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":null,"dir":"Reference","previous_headings":"","what":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"Constructs spatial weight matrices based contiguity via spdep package.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"","code":"spdep_contiguity_swm(   sfj,   queen = TRUE,   k = NULL,   order = 1L,   cumulate = TRUE,   style = \"W\",   zero.policy = TRUE )"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"sfj sf object can converted sf sf::st_as_sf(). queen (optional) TRUE, using queen contiguity, otherwise rook contiguity. Default TRUE. k (optional) number nearest neighbours. Ignore parameter using distance based neighbours construct spatial weight matrices. order (optional) order adjacency object. Default 1. cumulate (optional) Whether accumulate adjacency objects. Default TRUE. style (optional) style can take values W, B, C, S. see spdep::nb2mat(). Default W. zero.policy (optional)  FALSE stop error empty neighbour sets, TRUE permit weights list formed zero-length weights vectors. Default TRUE.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"matrix","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"k set positive value, using K-Nearest Neighbor Weights.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_contiguity_swm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constructs spatial weight matrices based on contiguity — spdep_contiguity_swm","text":"","code":"library(sf) gzma = read_sf(system.file('extdata/gzma.gpkg',package = 'sdsfun'))  wt1 = spdep_contiguity_swm(gzma, k = 6, style = 'B') wt2 = spdep_contiguity_swm(gzma, queen = TRUE, style = 'B') wt3 = spdep_contiguity_swm(gzma, queen = FALSE, order = 2, style = 'B')"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":null,"dir":"Reference","previous_headings":"","what":"constructs spatial weight matrices based on distance — spdep_distance_swm","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"Constructs spatial weight matrices based distance via spdep package.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"","code":"spdep_distance_swm(   sfj,   kernel = NULL,   k = NULL,   bandwidth = NULL,   power = 1,   style = \"W\",   zero.policy = TRUE )"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"sfj sf object can converted sf sf::st_as_sf(). kernel (optional) kernel function, can one uniform, triangular,quadratic(epanechnikov),quartic gaussian. Default NULL. k (optional) number nearest neighbours. Default NULL. useful kernel provided. bandwidth (optional) bandwidth, default NULL. spatial reference sf object geographical coordinate system, unit bandwidth km. unit used projection coordinate system consistent used sf object coordinate system. power (optional) Default 1. Useful kernel provided. style (optional) style can take values W, B, C, S. see spdep::nb2mat(). Default W. spatial weights based distance functions, style B means using original value calculated distance function. zero.policy (optional)  FALSE stop error empty neighbour sets, TRUE permit weights list formed zero-length weights vectors. Default TRUE.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"matrix","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"five different kernel weight functions: uniform: \\(K_{(z)} = 1/2\\),\\(\\lvert z \\rvert < 1\\) triangular \\(K_{(z)} = 1 - \\lvert z \\rvert\\),\\(\\lvert z \\rvert < 1\\) quadratic (epanechnikov) \\(K_{(z)} = \\frac{3}{4} \\left( 1 - z^2 \\right)\\),\\(\\lvert z \\rvert < 1\\) quartic \\(K_{(z)} = \\frac{15}{16} {\\left( 1 - z^2 \\right)}^2\\),\\(\\lvert z \\rvert < 1\\) gaussian \\(K_{(z)} = \\frac{1}{\\sqrt{2 \\pi}} e^{- \\frac{z^2}{2}}\\) equation , \\(z = d_{ij} / h_i\\) \\(h_i\\) bandwidth","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"kernel setting, using distance weight based kernel function, Otherwise inverse distance weight used.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_distance_swm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constructs spatial weight matrices based on distance — spdep_distance_swm","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun'))  wt1 = spdep_distance_swm(pts, style = 'B') wt2 = spdep_distance_swm(pts, kernel = 'gaussian') wt3 = spdep_distance_swm(pts, k = 3, kernel = 'gaussian') wt4 = spdep_distance_swm(pts, k = 3, kernel = 'gaussian', bandwidth = 10000)"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"construct neighbours list — spdep_nb","title":"construct neighbours list — spdep_nb","text":"construct neighbours list","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct neighbours list — spdep_nb","text":"","code":"spdep_nb(sfj, queen = TRUE, k = NULL, order = 1L, cumulate = TRUE)"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct neighbours list — spdep_nb","text":"sfj sf object can converted sf sf::st_as_sf(). queen (optional) TRUE, using queen contiguity, otherwise rook contiguity. Default TRUE. k (optional) number nearest neighbours. Ignore parameter using distance based neighbours. order (optional) order adjacency object. Default 1. cumulate (optional) Whether accumulate adjacency objects. Default TRUE.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"construct neighbours list — spdep_nb","text":"neighbours list class nb","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"construct neighbours list — spdep_nb","text":"k set positive value, using K-Nearest Neighbor","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct neighbours list — spdep_nb","text":"","code":"library(sf) pts = read_sf(system.file('extdata/pts.gpkg',package = 'sdsfun'))  nb1 = spdep_nb(pts, k = 6) nb2 = spdep_nb(pts, queen = TRUE) nb3 = spdep_nb(pts, queen = FALSE, order = 2)"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_skater.html","id":null,"dir":"Reference","previous_headings":"","what":"spatial c(k)luster analysis by tree edge removal — spdep_skater","title":"spatial c(k)luster analysis by tree edge removal — spdep_skater","text":"SKATER forms clusters spatially partitioning data similar values features interest.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_skater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatial c(k)luster analysis by tree edge removal — spdep_skater","text":"","code":"spdep_skater(sfj, k = 6, nb = NULL, ini = 5, ...)"},{"path":"https://stscl.github.io/sdsfun/reference/spdep_skater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatial c(k)luster analysis by tree edge removal — spdep_skater","text":"sfj sf object observation data. Please ensure attribute columns included SKATER analysis. k (optional) number clusters. Default 6. nb (optional) neighbours list class nb. input nb NULL, constructed automatically using spdep_nb(). ini (optional) initial node minimal spanning tree. Defaul 5. ... (optional) parameters passed spdep::skater().","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_skater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatial c(k)luster analysis by tree edge removal — spdep_skater","text":"numeric vector clusters.","code":""},{"path":"https://stscl.github.io/sdsfun/reference/spdep_skater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatial c(k)luster analysis by tree edge removal — spdep_skater","text":"","code":"library(sf) gzma = read_sf(system.file('extdata/gzma.gpkg',package = 'sdsfun')) gzma_c = spdep_skater(gzma,8) gzma$group = gzma_c plot(gzma[\"group\"])"},{"path":"https://stscl.github.io/sdsfun/reference/standardize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"standardization — standardize_vector","title":"standardization — standardize_vector","text":"calculate Z-score using variance normalization, formula follows: \\(Z = \\frac{(x - mean(x))}{sd(x)}\\)","code":""},{"path":"https://stscl.github.io/sdsfun/reference/standardize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standardization — standardize_vector","text":"","code":"standardize_vector(x)"},{"path":"https://stscl.github.io/sdsfun/reference/standardize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standardization — standardize_vector","text":"x numeric vector","code":""},{"path":"https://stscl.github.io/sdsfun/reference/standardize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"standardization — standardize_vector","text":"standardized numeric vector","code":""},{"path":"https://stscl.github.io/sdsfun/reference/standardize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"standardization — standardize_vector","text":"","code":"standardize_vector(1:10) #>  [1] -1.4863011 -1.1560120 -0.8257228 -0.4954337 -0.1651446  0.1651446 #>  [7]  0.4954337  0.8257228  1.1560120  1.4863011"},{"path":"https://stscl.github.io/sdsfun/news/index.html","id":"sdsfun-030","dir":"Changelog","previous_headings":"","what":"sdsfun 0.3.0","title":"sdsfun 0.3.0","text":"Begin use Rcpp complete tasks high computational complexity. Add dummy_vector dummy_tbl functions dummy variables generation. Add spdep_nb function neighbours list generation. Add spdep_skater function spatial constrained clustering. Update package extdata; now sdsfun two extdata: gzma.gpkg pts.gpkg.","code":""},{"path":"https://stscl.github.io/sdsfun/news/index.html","id":"sdsfun-021","dir":"Changelog","previous_headings":"","what":"sdsfun 0.2.1","title":"sdsfun 0.2.1","text":"CRAN release: 2024-09-23 Enhance support types spatial vector data. Inhibit warning information produced spdep. Add sf_utm_proj_wgs84() function.","code":""},{"path":"https://stscl.github.io/sdsfun/news/index.html","id":"sdsfun-020","dir":"Changelog","previous_headings":"","what":"sdsfun 0.2.0","title":"sdsfun 0.2.0","text":"CRAN release: 2024-09-15 Add sf_distance_matrix() function.","code":""},{"path":"https://stscl.github.io/sdsfun/news/index.html","id":"sdsfun-011","dir":"Changelog","previous_headings":"","what":"sdsfun 0.1.1","title":"sdsfun 0.1.1","text":"CRAN release: 2024-09-08 Update function documentation spdep_contiguity_swm() spdep_distance_swm(). Move source code SpatLyu/sdsfun GitHub stscl/sdsfun.","code":""},{"path":"https://stscl.github.io/sdsfun/news/index.html","id":"sdsfun-010","dir":"Changelog","previous_headings":"","what":"sdsfun 0.1.0","title":"sdsfun 0.1.0","text":"CRAN release: 2024-08-30 Initial CRAN submission.","code":""}]
